apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: promotion-templates
spec:
  arguments:
    parameters:
    - name: APP_NAME
    - name: ARGOCD_HOST
  hooks:
    exit:
      template: argocd-app-get
      arguments:
        parameters:
        - name: APP
          value: '{{ workflow.parameters.APP_NAME }}'
        - name: FLAGS
          value: -o json
        - name: ARGOCD_SERVER
          value: '{{ workflow.parameters.ARGOCD_HOST }}'
        - name: OPTS
          value: --grpc-web --plaintext
        - name: TOKEN_SECRET
          value: argocd-token
        - name: TOKEN_SECRET_KEY
          value: token
  templates:
  - name: manual-sync-promotion
    metadata:
      labels:
        codefresh.io/workflow-origin: 'promotion-wrapper'
    inputs:
      parameters:
      - name: APP_NAME
        value: '{{ workflow.parameters.APP_NAME }}'
      - name: ARGOCD_HOST
        value: '{{ workflow.parameters.ARGOCD_HOST }}'
      - name: PRE_SYNC_WORKFLOW
        default: ""      
      - name: POST_SYNC_WORKFLOW
        default: ""
      - name: ARGS
        default: ""
    steps:
    - - name: pre-sync
        when: '"{{ inputs.parameters.PRE_SYNC_WORKFLOW }}" != ""'
        template: submit-workflow
        arguments:
          parameters:
          - name: TEMPLATE_NAME
            value: '{{ inputs.parameters.PRE_SYNC_WORKFLOW }}'
          - name: ARGS
            value: '{{ inputs.parameters.ARGS }}'

    - - name: sync
        arguments:
          parameters:
          - name: APP
            value: '{{ inputs.parameters.APP_NAME }}'
          - name: FLAGS
            value: --prune --timeout 120
          - name: ARGOCD_SERVER
            value: '{{ inputs.parameters.ARGOCD_HOST }}'
          - name: OPTS
            value: --grpc-web --plaintext
          - name: TOKEN_SECRET
            value: argocd-token
          - name: TOKEN_SECRET_KEY
            value: token
        template: argocd-sync

    - - name: wait
        arguments:
          parameters:
          - name: APP
            value: '{{inputs.parameters.APP_NAME}}'
          - name: FLAGS
            value: --health --timeout 120
          - name: ARGOCD_SERVER
            value: '{{ inputs.parameters.ARGOCD_HOST }}'
          - name: OPTS
            value: --grpc-web --plaintext
          - name: TOKEN_SECRET
            value: argocd-token
          - name: TOKEN_SECRET_KEY
            value: token
        template: argocd-wait

    - - name: post-sync
        when: '"{{ inputs.parameters.POST_SYNC_WORKFLOW }}" != ""'
        template: submit-workflow
        arguments:
          parameters:
          - name: TEMPLATE_NAME
            value: '{{ inputs.parameters.POST_SYNC_WORKFLOW }}'
          - name: ARGS
            value: '{{ inputs.parameters.ARGS }}'

  - name: auto-sync-promotion
    metadata:
      labels:
        codefresh.io/workflow-origin: 'promotion-wrapper'
    inputs:
      parameters:
      - name: APP_NAME
        value: '{{ workflow.parameters.APP_NAME }}'
      - name: ARGOCD_HOST
        value: '{{ workflow.parameters.ARGOCD_HOST }}'
      - name: POST_SYNC_WORKFLOW
        default: ""
      - name: ARGS
        default: ""
    steps:
    - - name: post-sync
        when: '"{{ inputs.parameters.POST_SYNC_WORKFLOW }}" != ""'
        template: submit-workflow
        arguments:
          parameters:
          - name: TEMPLATE_NAME
            value: '{{ inputs.parameters.POST_SYNC_WORKFLOW }}'
          - name: ARGS
            value: '{{ inputs.parameters.ARGS }}'
        continueOn:
          failed: true

  - name: submit-workflow
    serviceAccountName: promotion-templates
    inputs:
      parameters:
      - name: TEMPLATE_NAME
      - name: ARGS
    outputs:
      parameters:
      - name: output
        valueFrom:
          path: /output.json
    script:
      name: submit
      image: quay.io/codefreshplugins/argo-hub-argo-workflows-argo-workflow-cli:0.0.4-main
      command:
      - sh
      source: |
        echo {{ inputs.parameters.ARGS }} > params.json
        OUTPUT=$(argo submit \
          --from wftmpl/{{ inputs.parameters.TEMPLATE_NAME }} \
          --parameter-file params.json \
          --labels codefresh.io/submit-wf-parent-uid={{ workflow.uid }},codefresh.io/workflow-origin=promotion \
          --wait \
          --output=json)
        ERROR_CODE=$?
        echo ${OUTPUT} > output.json
        exit ${ERROR_CODE}

  - name: argocd-sync
    inputs:
      parameters:
      - name: APP
      - name: FLAGS
        default: ""
      - name: ARGOCD_SERVER
      - name: OPTS
        default: ""
      - name: TOKEN_SECRET
        default: argocd-token
      - name: TOKEN_SECRET_KEY
        default: token
      - name: xtraceOption
        default: -o
    container:
      name: sync
      image: quay.io/codefreshplugins/argo-hub-workflows-argocd-versions-0.0.1-images-argocd-cli:main
      env:
      - name: ARGOCD_SERVER
        value: "{{ inputs.parameters.ARGOCD_SERVER }}"
      - name: ARGOCD_AUTH_TOKEN
        valueFrom:
          secretKeyRef:
            key: "{{ inputs.parameters.TOKEN_SECRET_KEY }}"
            name: "{{ inputs.parameters.TOKEN_SECRET }}"
      - name: ARGOCD_OPTS
        value: "{{inputs.parameters.OPTS}}"
      command:
      - sh
      - "{{inputs.parameters.xtraceOption}}"
      - xtrace
      - -c
      args:
      - argocd app sync {{inputs.parameters.APP}} {{inputs.parameters.FLAGS}}

  - name: argocd-wait
    inputs:
      parameters:
      - name: APP
      - name: FLAGS
        default: ""
      - name: ARGOCD_SERVER
      - name: OPTS
        default: ""
      - name: TOKEN_SECRET
        default: argocd-token
      - name: TOKEN_SECRET_KEY
        default: token
      - name: xtraceOption
        default: -o
    container:
      name: wait
      image: quay.io/codefreshplugins/argo-hub-workflows-argocd-versions-0.0.1-images-argocd-cli:main
      env:
      - name: ARGOCD_SERVER
        value: "{{ inputs.parameters.ARGOCD_SERVER }}"
      - name: ARGOCD_AUTH_TOKEN
        valueFrom:
          secretKeyRef:
            key: "{{ inputs.parameters.TOKEN_SECRET_KEY }}"
            name: "{{ inputs.parameters.TOKEN_SECRET }}"
      - name: ARGOCD_OPTS
        value: "{{ inputs.parameters.OPTS }}"
      command:
      - sh
      - "{{ inputs.parameters.xtraceOption }}"
      - xtrace
      - -c
      args:
      - argocd app wait {{ inputs.parameters.APP }} {{ inputs.parameters.FLAGS }}

  - name: argocd-app-get
    serviceAccountName: promotion-templates
    inputs:
      parameters:
      - name: APP
      - name: FLAGS
        default: "-o json"
      - name: ARGOCD_SERVER
      - name: OPTS
        default: ""
      - name: TOKEN_SECRET
        default: argocd-token
      - name: TOKEN_SECRET_KEY
        default: token
      - name: xtraceOption
        default: -o
    outputs:
      parameters:
      - name: output
        valueFrom:
          path: /output.json
    script:
      name: app-get
      image: quay.io/codefreshplugins/argo-hub-workflows-argocd-versions-0.0.1-images-argocd-cli:main
      env:
      - name: ARGOCD_SERVER
        value: "{{ inputs.parameters.ARGOCD_SERVER }}"
      - name: ARGOCD_AUTH_TOKEN
        valueFrom:
          secretKeyRef:
            key: "{{ inputs.parameters.TOKEN_SECRET_KEY }}"
            name: "{{ inputs.parameters.TOKEN_SECRET }}"
      - name: ARGOCD_OPTS
        value: "{{inputs.parameters.OPTS}}"
      command:
      - sh
      source: |
        OUTPUT=$(argocd app get {{ inputs.parameters.APP }} {{ inputs.parameters.FLAGS }})
        ERROR_CODE=$?
        echo ${OUTPUT} > output.json
        exit ${ERROR_CODE}
